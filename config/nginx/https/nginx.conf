worker_processes  1;

events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
	lua_package_path "/lualib/?.lua;;";  #lua 模块
  lua_package_cpath "/lualib/?.so;;";  #c模块
  keepalive_timeout  65;
	client_max_body_size 1000m;
	proxy_max_temp_file_size 0; #不限制大小
	#限制访问频率(每秒处理3000个请求)
	limit_req_zone $binary_remote_addr zone=laokou:100m rate=3000r/s;
	#超过访问频次限制的请求,放在缓冲区内,设置nodelay后，超过访问频次而缓冲区满了直接返回503
	limit_req zone=laokou burst=1000 nodelay;
	#限制并发频率(用来限制同一时间连接数，即并发限制)
	limit_conn_zone $binary_remote_addr zone=laokou_perip:100m;
	limit_conn_zone $server_name zone=laokou_perserver:100m;

	server {
	  charset utf-8; #设置编码
		listen 80;
		listen 443 ssl;
		server_name 1.com; # 配置的https的域名
		ssl_certificate      D:/koushenhai/project/env/windows/nginx/ssl/koushenhai.crt;  # 这个是证书的crt文件所在目录
		ssl_certificate_key  D:/koushenhai/project/env/windows/nginx/ssl/koushenhai.key;  # 这个是证书key文件所在目录
		ssl_session_cache    shared:SSL:1m;
		ssl_session_timeout  5m;
		ssl_ciphers  HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers  on;
		limit_conn laokou_perip 1000;
		limit_conn laokou_perserver 3000;
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Credentials true;
		add_header Access-Control-Allow-Methods *;
		add_header Access-Control-Allow-Headers ${http_access_control_request_headers};
		add_header X-Cache $upstream_cache_status;
		gzip  on;
		gzip_static on;
    gzip_min_length 1k;
    gzip_comp_level 9;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/    gif image/png;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    location / {
        root D:/koushenhai/project/KCloud-Antdv;
        try_files $uri $uri/ /index.html =404;
    }

		location /upload {
		    root D:/koushenhai/project/temp/;
		}

		location /laokou/ {
			proxy_pass http://192.168.62.1:5555/;
			proxy_redirect http:// https://;
			proxy_connect_timeout 6000;
			proxy_read_timeout 6000;
			proxy_set_header   X-Real-IP            $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
			proxy_set_header   Host                   $http_host;
			proxy_set_header   X-Forwarded-Proto https;
			proxy_set_header   X-NginX-Proxy    true;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
    }
  }
}
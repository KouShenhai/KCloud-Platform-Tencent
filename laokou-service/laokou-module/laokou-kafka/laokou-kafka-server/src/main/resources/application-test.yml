server:
  port: 10002
  address: 192.168.62.1
  undertow:
    threads:
      # 设置IO线程数，来执行非阻塞任务，负责多个连接数
      io: 16
      # 工作线程数
      worker: 256
    # 每块buffer的空间大小
    buffer-size: 1024
    # 分配堆外内存
    direct-buffers: true
spring:
  kafka:
    bootstrap-servers: 192.168.62.137:9092
    producer:
      # 发生错误后，消息重发的次数。
      retries: 5
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 0
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual
      missing-topics-fatal: false

logging:
  file:
    name: logs/${spring.application.name}/info.log